// <auto-generated />
using API_PROJECT.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_PROJECT.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240929151432_secondd")]
    partial class secondd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_PROJECT.Models.Ads", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("strBusinessId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("ads");
                });

            modelBuilder.Entity("API_PROJECT.Models.Categories", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("API_PROJECT.Models.Countries", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CapitalCity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("API_PROJECT.Models.Products", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sub_CategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("stDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("strPrevPrice")
                        .HasColumnType("double");

                    b.Property<double>("strPrice")
                        .HasColumnType("double");

                    b.Property<int>("strQuantity")
                        .HasColumnType("int");

                    b.Property<int>("strReviews")
                        .HasColumnType("int");

                    b.Property<string>("strStoreId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("strVisits")
                        .HasColumnType("int");

                    b.HasKey("strId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("API_PROJECT.Models.Shop_Connects", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("strShopId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("shop_Connects");
                });

            modelBuilder.Entity("API_PROJECT.Models.Shops", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsApprooved")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strAbout")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strContacts")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strCustomerCare")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strFb")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strInstagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("strIsVIP")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("strOpeningHours")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strStandardId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strTown")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strTwitter")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("strUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("shops");
                });

            modelBuilder.Entity("API_PROJECT.Models.Sub_Categories", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sub_Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("sub_Categories");
                });

            modelBuilder.Entity("API_PROJECT.Models.Users", b =>
                {
                    b.Property<string>("strId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profileBio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("provider")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("strId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
